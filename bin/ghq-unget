#!/usr/bin/env bash

# http://qiita.com/uasi/items/dae9b180680e90950cb1

ESC="$(printf "\033")"
FG_BLUE=34
FG_RED=31
M="m"
DEFAULT="[${_DEFAULT}m"

if [[ -z "$FILTER" ]]; then
  FILTER="peco"
fi

ask_yn() {
  local msg=$1
  local yn

  while read -r -p "$msg [yN] " yn; do
    case "$yn" in
      [Yy]*)
        return 0
        ;;
      [Nn]*)
        return 1
        ;;
      *)
        return 1
        ;;
    esac
  done
}

is_repo_changed() {
  # list changed file(s)
  local msg=$(git -c status.color=always status --short)

  if [[ $? -eq 0 && -z "$msg" ]]; then
    return 0
  else
    printf "${ESC}[${FG_RED}${M}The repository is dirty:${ESC}${DEFAULT}\n"
    echo
    sed 's/^/  /' <<< "$msg"
    echo
    return 1
  fi
}

is_unpushed_commit_found() {
  # list unpushed commit(s)
  local msg=$(git log --branches --not --remotes --simplify-by-decoration --decorate --oneline --color=always)

  if [[ $? -eq 0 && -z "$msg" ]]; then
    return 0
  else
    printf "${ESC}[${FG_RED}${M}There are unpushed commits:${ESC}${DEFAULT}\n"
    echo
    sed 's/^/  /' <<< "$msg"
    echo
    return 1
  fi
}

rm_each_repo() {
  local fd="$1"
  local repo_path ret_val

  while read -u "$fd" -r repo_path; do
    printf "> ${ESC}[${FG_BLUE}${M}${repo_path}${ESC}${DEFAULT}\n"
    (
      cd "$repo_path"
      ret_val=0
      is_repo_changed
      ret_val=$(( ret_val + $? ))
      is_unpushed_commit_found
      ret_val=$(( ret_val + $? ))
      if [[ "$ret_val" -ne 0 ]]; then
        if ask_yn "Are you sure you want to remove it?"; then
          rm -rf "$repo_path"
        fi
      else
        rm -rf "$repo_path"
      fi
    )
  done
}

rm_each_repo 3 3< <( ghq list --full-path | "$FILTER" )
