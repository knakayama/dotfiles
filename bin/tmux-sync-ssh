#!/usr/bin/env bash
# https://github.com/y-uuki/opstools

usage() {
  cat <<EOT
Usage: $(basename $0) -t tty-server -f file [-h]

Options:

    -t tty-server  tty-server (config or kero)
    -f file        host file
    -h             Print this help
EOT
}

hosts=("$@")
session_name="tmux-ssh-$$"

while getopts ':t:f:h' args; do
  case "$args" in
    t)
      tty="$OPTARG"
      ;;
    f)
      host_lists="$OPTARG"
      ;;
    h)
      usage
      exit 0
      ;;
    *)
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND - 1))

[[ -n "$tty" && -n "$_file" ]] || { echo "please specify -t or -f args" 1>&2; usage; exit 1; }
[[ "$tty" =~ ^(config|kero)$ ]] || { echo "unknown args for -t : $tty" 1>&2; usage; exit 1; }
[[ -f "$host_lists" ]] || { echo "not found: $host_list" 1>&2; usage; exit 1; }

tmux start-server

is_first="true"
for _host in $(grep -vE '^(#|$)' "$host_lists"); do
  if [[ "$tty" == "config" ]]; then
    cmd="ssh -t config 'ssh -o StrictHostKeyChecking=no root@$_host'"
  else
    cmd="ssh -t kero 'sudo ssh -o StrictHostKeyChecking=no $_host'"
  fi

  if [[ "$is_first" == "true" ]]; then
    tmux new-session -d -s "$session_name" "$cmd"

    is_first="false"
  else
    tmux split-window  -t "$session_name" "$cmd"
    tmux select-layout -t "$session_name" tiled >/dev/null
  fi
done

tmux set-window-option -t "$session_name" synchronize-panes on
tmux select-pane -t 0
tmux attach-session -t "$session_name"

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=sh sw=2 ts=2 et
