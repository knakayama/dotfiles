// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "ctrl+cmd+f",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+cmd+m",
    "command": "markdown.showPreviewToSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "cmd+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+cmd+u",
    "command": "plantuml.preview"
  },
  {
    "key": "alt+d",
    "command": "-plantuml.preview"
  },
  {
    "key": "ctrl+cmd+p",
    "command": "gitProjectManager.openProject"
  },
  {
    "key": "alt+cmd+p",
    "command": "-gitProjectManager.openProject"
  },
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+cmd+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+cmd+z",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+cmd+f",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.previousEditor",
    "when": "!terminalFocus && !suggestWidgetMultipleSuggestions && !inQuickOpen"
  },
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.nextEditor",
    "when": "!terminalFocus && !suggestWidgetMultipleSuggestions && !inQuickOpen"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+i",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+i",
    "command": "insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "tab",
    "command": "-insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "ctrl+i",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+i",
    "command": "jumpToNextSnippetPlaceholder",
    "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
  },
  {
    "key": "tab",
    "command": "-jumpToNextSnippetPlaceholder",
    "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
  },
  {
    "key": "ctrl+cmd+k",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+cmd+r",
    "command": "code-runner.run"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "shift+alt+p",
    "command": "-extension.previewSwagger",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+p",
    "command": "-swagger.preview",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+cmd+s",
    "command": "openapi.previewSwaggerUI"
  }
]

