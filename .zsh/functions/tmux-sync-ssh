#!/usr/bin/env zsh

tmux-sync-ssh() {
  -tmux-sync-ssh-usage() {
  cat <<'EOT'
Usage: tmux-sync-ssh -f host-file [-h]

Options:
    -f host-file   host file
    -h             Print this help
EOT
  }

  local session_name="tmux-sync-ssh-${RANDOM}"
  local host_list
  local is_first
  local host_name
  local OPTARG OPTIND args

  while getopts ':f:h' args; do
    case "$args" in
      f)
        host_list="$OPTARG"
        ;;
      h)
        -tmux-sync-ssh-usage
        return 0
        ;;
      *)
        -tmux-sync-ssh-usage
        return 1
        ;;
    esac
  done
  shift $((OPTIND - 1))

  # validate args
  [[ -n "$host_list" ]] || \
    { echo "please specify -f args" 1>&2; -tmux-sync-ssh-usage; return 1; }
  [[ -f "$host_list" ]] || \
    { echo "$host_list not found" 1>&2; -tmux-sync-ssh-usage; return 1; }

  tmux start-server

  is_first="true"
  for host_name in $(grep -vE '^(#|$)' "$host_list"); do
    if [[ "$is_first" == "true" ]]; then
      tmux new-session -d -s "$session_name" \
        ssh -t "kero" "sudo ssh -o StrictHostKeyChecking=no $host_name"
      is_first="false"
    else
      tmux split-window -t "$session_name" \
        ssh -t "kero" "sudo ssh -o StrictHostKeyChecking=no $host_name"
      tmux select-layout -t "$session_name" tiled >/dev/null
    fi
  done

  tmux set-window-option -t "$session_name" synchronize-panes on
  tmux select-pane -t 0
  tmux attach-session -t "$session_name"
}

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
